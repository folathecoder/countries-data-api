{"id":"node_modules/core-js/modules/es.string.replace-all.js","dependencies":[{"name":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\package.json","includedInParent":true,"mtime":1629937278682},{"name":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1629916431903},{"name":"../internals/export","loc":{"line":2,"column":16},"parent":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\modules\\es.string.replace-all.js","resolved":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\internals\\export.js"},{"name":"../internals/require-object-coercible","loc":{"line":3,"column":37},"parent":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\modules\\es.string.replace-all.js","resolved":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\internals\\require-object-coercible.js"},{"name":"../internals/is-regexp","loc":{"line":4,"column":23},"parent":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\modules\\es.string.replace-all.js","resolved":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\internals\\is-regexp.js"},{"name":"../internals/to-string","loc":{"line":5,"column":23},"parent":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\modules\\es.string.replace-all.js","resolved":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\internals\\to-string.js"},{"name":"../internals/regexp-flags","loc":{"line":6,"column":29},"parent":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\modules\\es.string.replace-all.js","resolved":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\internals\\regexp-flags.js"},{"name":"../internals/get-substitution","loc":{"line":7,"column":30},"parent":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\modules\\es.string.replace-all.js","resolved":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\internals\\get-substitution.js"},{"name":"../internals/well-known-symbol","loc":{"line":8,"column":30},"parent":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\modules\\es.string.replace-all.js","resolved":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\internals\\well-known-symbol.js"},{"name":"../internals/is-pure","loc":{"line":9,"column":22},"parent":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\modules\\es.string.replace-all.js","resolved":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\internals\\is-pure.js"}],"generated":{"js":"'use strict';\nvar $ = require('../internals/export');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getRegExpFlags = require('../internals/regexp-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar RegExpPrototype = RegExp.prototype;\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return string.indexOf(searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible('flags' in RegExpPrototype\n          ? searchValue.flags\n          : getRegExpFlags.call(searchValue)\n        ));\n        if (!~flags.indexOf('g')) throw TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = searchValue[REPLACE];\n      if (replacer !== undefined) {\n        return replacer.call(searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return toString(O).replace(searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = typeof replaceValue === 'function';\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      if (functionalReplace) {\n        replacement = toString(replaceValue(searchString, position, string));\n      } else {\n        replacement = getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      }\n      result += string.slice(endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += string.slice(endOfLastMatch);\n    }\n    return result;\n  }\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/core-js/modules/es.string.replace-all.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}}],"sources":{"node_modules/core-js/modules/es.string.replace-all.js":"'use strict';\nvar $ = require('../internals/export');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getRegExpFlags = require('../internals/regexp-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar RegExpPrototype = RegExp.prototype;\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return string.indexOf(searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible('flags' in RegExpPrototype\n          ? searchValue.flags\n          : getRegExpFlags.call(searchValue)\n        ));\n        if (!~flags.indexOf('g')) throw TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = searchValue[REPLACE];\n      if (replacer !== undefined) {\n        return replacer.call(searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return toString(O).replace(searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = typeof replaceValue === 'function';\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      if (functionalReplace) {\n        replacement = toString(replaceValue(searchString, position, string));\n      } else {\n        replacement = getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      }\n      result += string.slice(endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += string.slice(endOfLastMatch);\n    }\n    return result;\n  }\n});\n"},"lineCount":69}},"error":null,"hash":"5ec5b5ee8cff8693e60a1ffacedbab37","cacheData":{"env":{}}}