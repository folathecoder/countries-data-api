{"id":"node_modules/core-js/modules/es.date.to-string.js","dependencies":[{"name":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\package.json","includedInParent":true,"mtime":1629937278682},{"name":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1629916431903},{"name":"../internals/redefine","loc":{"line":1,"column":23},"parent":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\modules\\es.date.to-string.js","resolved":"C:\\Users\\Folarin Akinloye\\Documents\\repositories\\countries-data-api\\countries-data-api\\node_modules\\core-js\\internals\\redefine.js"}],"generated":{"js":"var redefine = require('../internals/redefine');\n\nvar DatePrototype = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar nativeDateToString = DatePrototype[TO_STRING];\nvar getTime = DatePrototype.getTime;\n\n// `Date.prototype.toString` method\n// https://tc39.es/ecma262/#sec-date.prototype.tostring\nif (String(new Date(NaN)) != INVALID_DATE) {\n  redefine(DatePrototype, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare -- NaN check\n    return value === value ? nativeDateToString.call(this) : INVALID_DATE;\n  });\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/es.date.to-string.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"node_modules/core-js/modules/es.date.to-string.js":"var redefine = require('../internals/redefine');\n\nvar DatePrototype = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar nativeDateToString = DatePrototype[TO_STRING];\nvar getTime = DatePrototype.getTime;\n\n// `Date.prototype.toString` method\n// https://tc39.es/ecma262/#sec-date.prototype.tostring\nif (String(new Date(NaN)) != INVALID_DATE) {\n  redefine(DatePrototype, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare -- NaN check\n    return value === value ? nativeDateToString.call(this) : INVALID_DATE;\n  });\n}\n"},"lineCount":18}},"error":null,"hash":"ed50cc2691356cc6695bfd4b98b3d2db","cacheData":{"env":{}}}